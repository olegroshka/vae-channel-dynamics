# Base configuration - common settings
project_name: "vae-dyn"
run_name: "baseline" # Overridden by specific experiment configs
output_dir: "./results" # Base directory for checkpoints and logs

# Seed for reproducibility
seed: 42

# Model parameters
model:
  pretrained_vae_name: "stabilityai/sdxl-vae"
  # Add any model-specific config here if needed later

# Data parameters
data:
  dataset_name: "lambdalabs/pokemon-blip-captions"
  image_column: "image"
  resolution: 256
  max_samples: null # Set to an integer to use a subset, null for full dataset
  batch_size: 4 # Per device
  num_workers: 4

# Training parameters
training:
  num_train_epochs: 10
  learning_rate: 1e-5
  adam_beta1: 0.9
  adam_beta2: 0.999
  adam_weight_decay: 1e-2
  adam_epsilon: 1e-08
  lr_scheduler_type: "linear" # "linear", "cosine", "constant", etc.
  lr_warmup_steps: 100
  gradient_accumulation_steps: 1
  mixed_precision: "fp16" # "no", "fp16", "bf16"
  max_grad_norm: 1.0 # Max gradient norm for clipping
  kl_weight: 1e-6 # Weight for the KL divergence loss term

# Logging and Saving
logging:
  log_interval: 10 # Log metrics every N global steps
  report_to: "wandb" # "tensorboard", "wandb", "all", "none"
  entity: "vae-dyn" # W&B entity (username or team name) here
saving:
  save_interval: 500 # Save checkpoint every N global steps
  checkpoint_dir_prefix: "chkpt" # Prefix for checkpoint subdirectories

# In base_config.yaml or experiment_cifar10_test.yaml
dead_neuron_tracking:
  enabled: true # Or false
  track_interval: 100 # Or same as activity_monitor_track_interval
  target_layer_names_for_raw_weights: [] # If you want to log raw weights for specific layers

# Threshold for considering a weight "dead" or "near-zero"
threshold: 1e-8

# Tracking parameters (Placeholders - define specific params later)
tracking:
  enabled: false # Disabled by default in base, enable in specific configs
  track_interval: 100 # Default interval to process/log tracked data
  target_layers: [] # Empty by default, specify in dev/experiment configs
    # Example structure for target_layers (to be filled in dev/experiment configs):
    # - name: "vae.decoder.up_blocks.0.resnets.0.norm1"
    #   capture_point: "input" # 'input' or 'output'
    #   metrics:
    #     - "mean_abs_activation_per_channel"
    #     - "full_activation_map" # Careful with memory for many layers/high frequency
    #     - "mean_activation"
    #     - "std_activation"
    # - name: "vae.decoder.up_blocks.0.resnets.0.conv1"
    #   capture_point: "output"
    #   metrics:
    #     - "mean_abs_activation_per_channel"

# --- Logit lens section ---
logit_lens:
  enabled: false # Disabled by default, enable in specific experiment configs
  visualization_interval: 1000 # How often (global steps) to generate visualizations
  visualization_output_subdir: "logit_lens_visualizations" # Subdirectory in experiment output
  target_tracked_metrics: []
    # List of strings, each identifying a 'full_activation_map' to visualize.
    # Format: "<layer_identifier_from_monitor>.<metric_name_from_monitor>"
    # Example:
    #   - "vae.encoder.down_blocks.0.resnets.0.norm1.input.full_activation_map"
    #   - "vae.decoder.up_blocks.0.resnets.0.norm1.input.full_activation_map"
  num_channels_to_viz: 4    # Default number of channels to visualize per map
  num_batch_samples_to_viz: 1 # Default number of batch samples to visualize
  colormap: 'viridis'         # Default colormap for activation maps
  run_mini_decoder_projection: false # Whether to run the placeholder mini-decoder

# Classification parameters (Placeholders)
classification:
  enabled: false
  method: "threshold" # e.g., "threshold", "info_geom"
  threshold: 0.01 # Example param

# Intervention parameters (Placeholders)
intervention:
  enabled: false
  strategy: "gentle_nudge" # e.g., "gentle_nudge", "reset_scale"
  nudge_factor: 1.1 # Example param
  intervention_interval: 200 # Intervene every N global steps

